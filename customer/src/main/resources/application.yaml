server:
  port: 8080

spring:
  config:
    import: optional:configserver:http://localhost:8083
  application:
    name: customer-service
  datasource:
    url: jdbc:postgresql://localhost:5432/customer
    username: admin
    password: password
  jpa:
    show-sql: true
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      ddl-auto: update
      format_sql:
  kafka:
    producer:
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: localhost:29092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    preferIpAddress: true

# Config actuator monitor for circuit break health check
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

# Config for customerFindAllCB circuit breaker at customerService
resilience4j.circuitbreaker:
  instances:
    customerFindAllCB:
      registerHealthIndicator: true
      slidingWindowSize: 10
      slidingWindowType: COUNT_BASED
      permittedNumberOfCallsInHalfOpenState: 4
      minimumNumberOfCalls: 2
      waitDurationInOpenState: 5s
      slowCallRateThreshold: 50
      slowCallDurationThreshold: 10
      failureRateThreshold: 50

# Configuration for Kafka
customer:
  kafka:
    topic: CUSTOMER-MESSAGE-TOPIC


